[alias]
	ci = commit -m
	fpush = push --force
	s = status
	cp = cherry-pick
	br = branch
	p = pull
	a = add
	sclone = clone --depth=1
	amend = commit --amend --all
	hreset = reset --hard
	co = checkout
	df = diff --color --color-words --abbrev
	lg = log --color --graph --pretty=format:'%Cred%h%Creset -%C(yellow)%d%Creset %s %Cgreen(%cr) %C(bold blue)<%an>%Creset' --abbrev-commit --

	# Show the diff between the latest commit and the current state
	d = !"git diff-index --quiet HEAD -- || clear; git --no-pager diff --patch-with-stat"

	reup = rebase-update # depot_tools specific

[core]
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes
	pager = delta

[delta]
	max-line-length = 700
	syntax-theme = base16
	file-style = bold yellow ul
	file-decoration-style = yellow ol ul
	hunk-header-decoration-style = blue
	hunk-header-line-number-style = purple bold

[interactive]
	diffFilter = delta --color-only --features=interactive

[diff]
	# Show blocks of moved text of at least 20 alphanumeric characters differently than adds/deletes
	# https://blog.github.com/2018-04-05-git-217-released/
	colorMoved = default
	# Detect copies in addition to renames
	renames = copies
	# A la `git submodule summary`
	submodule = log

# so much color
[color]
	ui = auto
[color "diff"]  # i still love these choices in 2022.
	meta = yellow bold
	commit = green bold
	frag = magenta bold
	old = red bold
	new = green bold
	whitespace = red reverse

	newMoved = cyan dim
	oldMoved = blue dim
	newMovedAlternative = cyan italic
	oldMovedAlternative = blue italic
[color "branch"]
	current = yellow reverse
	local = yellow
	remote = green
[color "status"]
	added = yellow
	changed = green
	untracked = cyan

# git mergetool
[merge]
	tool = opendiff
	renameLimit = 0

# correct typos
[help]
	autocorrect = 1

# push easily. http://stackoverflow.com/a/23918418/89484
[push]
	# default = current
	# followTags = true
	# Using Luo for now
	default = simple

[pull]
	ff = only

# use separate file for username / github token / etc
[include]
	path = ~/.gitconfig.local

[filter "lfs"]
	clean = git-lfs clean %f
	smudge = git-lfs smudge %f
	required = true

[fetch]
	prune = true

[stash]
	showPatch = true
